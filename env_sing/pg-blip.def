# Apptainer Definition File
Bootstrap: docker
From: nvidia/cuda:11.3.1-devel-ubuntu20.04

%environment
    export LC_ALL=C.UTF-8
    export LANG=C.UTF-8
    export DEBIAN_FRONTEND=noninteractive
    export XDG_RUNTIME_DIR=/run/user/1000

%post
    # Create XDG_RUNTIME_DIR with permissions
    mkdir -p /run/user/1000 && chmod 0700 /run/user/1000

    # Use Japanese server for apt
    sed -i 's@archive.ubuntu.com@ftp.jaist.ac.jp/pub/Linux@g' /etc/apt/sources.list

    # Update apt and install common packages
    apt-get -y update && \
    apt-get -y install lsb-release software-properties-common git ssh \
    python-is-python3 vim nano wget curl make build-essential cmake \
    tmux libopencv-dev python3.9 python3-pip \
    xsel xclip

    # Set Python 3.9 as default
    update-alternatives --install /usr/bin/python python /usr/bin/python3.9 1

    # Upgrade pip, setuptools, and wheel
    python -m pip install --upgrade pip setuptools wheel

    # Clone LAVIS repository
    git clone https://github.com/salesforce/LAVIS.git /LAVIS

    # Install Open3D and other dependencies
    python -m pip install open3d==0.18.0
    sed -i 's/open3d==0.13.0/open3d==0.18.0/g' /LAVIS/requirements.txt
    cd /LAVIS && pip install .

    # Resolve numpy core multiarray issue and install compatible packages
    pip install numpy==1.22.4 opencv_python==4.5.3.56
    pip uninstall -y pandas && pip install pandas
    pip install huggingface-hub==0.24.7

    # Set up pg-blip workspace
    #mkdir /pg-blip
    #cp -r /path/to/your/local/pg-blip /pg-blip

    # Download model
    mkdir /models
    cd /models && wget https://huggingface.co/bidiptas/PG-InstructBLIP/resolve/main/pgvlm_weights.bin

    # Set up tmux configuration
    git clone https://github.com/ry0hei-kobayashi/tmux-conf.git && mv tmux-conf/.tmux.conf ~/

%runscript
    # Change to the pg-blip directory on startup
    cd /pg-blip

